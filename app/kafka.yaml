apiVersion: v1
kind: PersistentVolume
metadata:
  name: kafka-data
  namespace: dpc  
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 20Gi
  nfs:
    path: /mnt/dpc/kafka-data
    server: 192.168.88.109
  persistentVolumeReclaimPolicy: Retain
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-data
  namespace: dpc  
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  volumeName: kafka-data
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-cluster
  namespace: dpc  
  labels:
    app: kafka-cluster
spec:
  ports:
  - port: 9092
    name: kafka
  clusterIP: None
  selector:
    app: kafka-cluster
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-cluster
  namespace: dpc  
spec:
  selector:
    matchLabels:
      app: kafka-cluster # has to match .spec.template.metadata.labels
  serviceName: "kafka-cluster"
  replicas: 3 # by default is 1
  template:
    metadata:
      labels:
        app: kafka-cluster # has to match .spec.selector.matchLabels
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: statefulset.kubernetes.io/pod-name
                operator: In
                values:
                - kafka-cluster-0
                - kafka-cluster-1
                - kafka-cluster-2
            topologyKey: kubernetes.io/hostname                   
      terminationGracePeriodSeconds: 10
      containers:
      - name: kafka-cluster
        image: registry.tongxin.dpc.com/wurstmeister/kafka:2.12-2.4.0
        command:
        - sh
        - "-c"
        - |
          if [ ! -d /data/`hostname` ]; then
                  mkdir /kafka/kafka-logs/`hostname`
          fi
          start-kafka.sh --override log.dir=/kafka/kafka-logs/`hostname`
        ports:
        - containerPort: 9092
          name: kafka
        env:
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:2181 
        - name: KAFKA_LISTENERS
          value: PLAINTEXT://:9092                      
        volumeMounts:
        - name: kafka-data
          mountPath: /kafka/kafka-logs
      volumes:
        - name: kafka-data
          persistentVolumeClaim:
            claimName: kafka-data